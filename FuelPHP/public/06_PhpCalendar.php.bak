<?php
// 요일제목 만들기
$arrayweek = array("weekend", "weekday", "Mon", "Tue", "Wed", "Thu", "Fri");
$p = " | ";
foreach($arrayweek as $value){
	print $value.$p;
}
?>

<?php
// 이번 달(큰 제목)과 오늘 날짜 표시하기
print "<h1>".date("F")."</h1>"; // date는 php 표준함수
print "Today:".date("Y/m/d");
print "<br>";
$arrayweek = array("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");
print "<table border=1><tr>";
$p = " | ";
foreach($arrayweek as $value){
	print "<th>".$value."</th>";
}
print "</tr><tr>";
//날짜 모두 출력하기
/*
date함수
매개변수1 : date("w", 날짜) : 날짜의 요일의 숫자를 얻는다, 일:0, 월:1, 화:2...
매개변수2 : mktime(시, 분, 초, 달, 일, 년) : 날짜를 지정
date("n") : 현재 달을 반환
date("Y") : 현재 년 반환

따라서 지정된 날짜의 요일을 숫자로 구하고, 요일의 숫자가 6이면 br추가
*/

/*
$week_number == 0 : 일요일인지아닌지
$i != 0 : 첫번재 날이 일요일인 경우, 줄바꿈 한번 더하는거 방지 

$week_number == 6 : 토요일이면 줄바꿈
$i==date("t") : 마지막 날이면 줄바꿈


*/
for($i=0; $i<date("t"); $i++){
	$week_number = date("w", mktime(0, 0, 0, date("n"), $i+1, date("Y")));
	if($i == 0){
		print "<tr>";
		Print_Calendar::space_cell($week_number); // 첫번째 일요일부터 1일까지 사이에 빈칸 춘력
	}
	elseif($week_number == 0){
		print "<tr>";

	}

	//print "<td>".($i + 1)."</td>";
	print "<td>".Print_Calendar::today($i + 1)."</td>";

	if($i+1 == date("t")){
		Print_Calendar::space_cell(6 - $week_number); // 마지막 말일에서 빈칸 출력
		print "</tr>";
	}
	elseif($week_number==6){
		print "</tr>";
	}
}
print "</table>";

/*
함수 정의에서 따로 반환값의 형식을 표시하지 않는다.

// 클래스 생성은 new 키워드로
$변수이름 = new 클래스이름;

// 메소드 접근1
클래스이름::메소드이름(매개변수)

// 메소드 접근2
클래스이름->메소드이름

*/

class Print_Calendar extends Today_Calendar{
	function space_cell($count){
		if($count != 0){
			for($i=0; $i<$count; $i++){
				print "<td></td>";
			}
		}
	}
}

class Today_Calendar{
	function today($day){
		if (date("Y/m/d") == date("Y/m/d", mktime(0, 0, 0, date("n"), $day, date("Y")))){
			return "<b>".$day."</b>";
		}
		else{
			return $day;
		}
	}
}


?>